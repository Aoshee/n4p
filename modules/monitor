#!/bin/bash
SOURCE="${BASH_SOURCE[0]}"
while [[ -h "$SOURCE" ]]; do # resolve $SOURCE until the file is no longer a symlink
    DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
    SOURCE="$(readlink "$SOURCE")"
    [[ $SOURCE != /* ]] && SOURCE="$SOURCE" # if $SOURCE was a relative symlink, we need to resolve it's relativeness to the path where the symlink file was located
done
DIR="$( cd -P "$( dirname "$SOURCE" )" && pwd )"
LOG_METALOG=/var/log/everything/current
LOG_SYSLOG_NG=/var/log/dhcpd.log
source ${DIR}/userspace

if [[ -f $LOG_METALOG ]]; then
    USE=$LOG_METALOG
elif [[ -f $LOG_SYSLOG_NG ]]; then
    USE=$LOG_SYSLOG_NG
else
    echo "We were unable to locate any system log files\nPlease fix or use a different mode"
fi

#tail -f $USE | grep at0 | awk -FDHCPACK '{print $2}' | awk -Fvia '{print $1}'
# This seems to be really slow. Lets try it in order to prevent swapping of sys logs for now.
tail -f /var/log/dhcpd.log

#mv $USE ${USE}.bak
#echo "" > $USE

#while true; do
#        while read line
#        do GOTCHYA=$(egrep 'DHCPACK|$1' | awk -Fon '{print $2'})
#        done < $USE
#        clear
#        echo "${BLD_TEA}$(cat ${DIR_LOGO}monitor.logo)${TXT_RST}"
#        echo -e "$GOTCHYA \n"
#        sleep 8
#done

monitor()
{
    if [[ -n $MONITOR_MODE ]]; then
        if [[ $MONITOR_MODE == "Custom" ]]; then
            xterm -bg black -fg DodgerBlue1 -T "N4P Victims" -geometry 65x15 -e "bash -ic \"${DIR}/./monitor ; bash\"" &>/dev/null &
        elif [[ $MONITOR_MODE == "dhcpdump" ]]; then
            xterm -bg black -fg DodgerBlue1 -T "N4P Victims" -geometry 65x15 -e "bash -ic \"dhcpdump ; bash\"" &>/dev/null &
        elif [[ $MONITOR_MODE == "arp" ]]; then
            xterm -bg black -fg DodgerBlue1 -T "N4P Victims" -geometry 65x15 -e "bash -ic \"arp -a -i $1 ; bash\"" &>/dev/null &
        fi
    fi
}

killemAll()
{
    #rm $USE
    #mv ${USE}.bak $USE
    exit 0
}

trap killemAll INT HUP;