#!/bin/bash
###############################################
# Do all prerun variables and safety measures #
# before anything else starts happening       #
###############################################
if [[ $(id -u) != 0 ]]; then # Verify we are root if not exit
   echo "Please Run This Script As Root or With Sudo!" 1>&2
   sleep 2
   exit 1
fi

DIR_CONF=/etc/n4p/

#######################################
# Building a sane working environment #
#######################################
get_name() # Retrieve the config values
{
    USE=$(grep $1 ${DIR_CONF}n4p.conf | awk -F= '{print $2}')
}

get_state() # Retrieve the state of interfaces
{
    STATE=$(ip addr list | grep -i $1 | grep -i DOWN | awk -Fstate '{print $2}' | cut -d ' ' -f 2)
}

get_RCstatus() # What is the status from OpenRC of the service
{
    STATUS=$(/etc/init.d/$1 status | sed 's/* status: //g' | cut -d ' ' -f 2)
}

depends()
{
    get_name "NETWORKMANAGER="; NETWORKMANAGER=$USE
    get_name "IFACE0="; IFACE0=$USE
    get_name "IFACE1="; IFACE1=$USE
    get_name "BRIDGED="; BRIDGE_NAMED=$USE
    get_name "BRIDGE_NAME="; BRIDGE_NAME=$USE
    get_name "OS="; OS=$USE
    MON="${IFACE1}mon"
    # Text color variables
    BLD_PUR=${txtbld}$(tput setaf 5) # purple
    BLD_TEA=${txtbld}$(tput setaf 6) # teal
    BLD_WHT=${txtbld}$(tput setaf 7) # white
    TXT_RST=$(tput sgr0)             # Reset
    INFO=${BLD_WHT}*${TXT_RST}       # Feedback
    WARN="${BLD_TEA}[${TXT_RST}${BLD_PUR} * ${TXT_RST}${BLD_TEA}]${TXT_RST}"
    # Start text with $BLD_YEL variable and end the text with $TXT_RST
}

rebuild_network()
{
    if [[ -n $(ip addr | grep -i "$MON") ]]; then echo "$WARN Leftover scoobie snacks found! nom nom"; airmon-ng stop $MON; fi

    if [[ $BRIDGED == "True" ]]; then # All of this is deprecated update it asap.
        get_RCstatus "net.$BRIDGE_NAME"
        [[ $STATUS == 'started' ]] && /etc/init.d/net.$BRIDGE_NAME stop

        get_state "$BRDIGE"
        [[ $STATE != 'DOWN' ]] && ip link set $BRDIGE down

        brctl delif "$BRIDGE_NAME $RESP_BR_1"
        brctl delif "$BRIDGE_NAME $RESP_BR_2"
        brctl delbr "$BRIDGE_NAME"
        brctl show
    fi

    echo "$INFO It's now time to bring your default network interface back up"
    if [[ $NETWORKMANAGER != "True" ]]; then
        get_RCstatus "net.$IFACE0"
        if [[ $STATUS != 'started' ]]; then
            get_state "$IFACE0"
            [[ $STATE == 'DOWN' ]] && ip link set $IFACE0 up
            /etc/init.d/net.$IFACE0 start
        fi
        echo -e "\n$INFO The environment is now sanitized cya"
    else
        if [[ $OS == "Pentoo" ]]; then
            [[ $(get_RCstatus NetworkManager) != 'started' || $STATUS == 'inactive' ]] && /etc/init.d/NetworkManager start
        else
            service network-manager start
        fi
            echo -e "\n$INFO The environment is now sanitized cya"
    fi
    exit 0
}
depends
rebuild_network